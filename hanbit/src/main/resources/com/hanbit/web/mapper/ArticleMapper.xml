<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanbit.web.mapper.ArticleMapper"> 
	<!-- SYSDATE()는 현재 컴퓨터의 시간을 가져와서 디비에 넣기 위해 사용하는 함수다!(쿼리문에서 쓸 수 있다!) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="article_id" parameterType="com.hanbit.web.board.ArticleDTO"> 
		<!-- 현재 필요없어 보이는 group_id와 sequence_no는 없애버렸다, DTO에는 살아있다. -->
		INSERT INTO Article(posting_date, read_count, writer_name, password, title, content) 
		VALUES(SYSDATE(),0,#{writerName},#{password},#{title},#{content}) <!-- SYSDATE()는 현재 내 컴퓨터의 시간을 반환해주는 함수다! -->
		
		<!-- INSERT INTO Article(group_id, sequence_no, posting_date, read_count, writer_name, password, title, content) 
		VALUES(10,12,SYSDATE(),0,#{writerName},#{password},#{title},#{content}) -->
	</insert>
	
	<!-- 컬럼의 이름이랑 자바의 변수이름이 같으면 AS를 안써도 된다?! -->
	<!-- 왼쪽이 데이터베이스 컬럼이름이고 오른쪽은 자바의 클래스안에 있는 인스턴스 변수이름이다. -->
	<!-- 데베 컬럼이름과 자바의 변수이름이 같으면 상관없으나 다르면 아래와 같이 AS를 써서 맞춰줘야한다. -->
	<select id="selectList" parameterType="com.hanbit.web.global.Command" resultType="com.hanbit.web.board.ArticleDTO"> <!-- 데이터베이스에 넘기는 파라미터는 id 값 하나면 되니까 "string"으로 한다. -->
		SELECT article_id AS articleId, 
		<!-- 현재 필요없어 보이는 두 개의 컬럼을 데이터베이스에서 제외시켰다. -->
		<!-- group_id AS groupId,
		sequence_no AS sequenceNo, --> 
		DATE_FORMAT(posting_date,'%Y-%m-%d') AS postingDate,
		read_count AS readCount,
		writer_name AS writerName,
		password,
		title,
		content
		FROM Article
		ORDER BY posting_date DESC <!-- 날짜 순으로 최신 글이 맨 앞에 오게 된다. -->
		LIMIT #{startRow}, #{articleSize} <!-- 가지고 갈 게시글의 시작(startRow), 시작부터 몇개를 가지고 갈 것인지 그 숫자(ArticleSize -->
	</select>
	
	<select id="selectBySearch" parameterType="com.hanbit.web.global.Command" resultType="com.hanbit.web.board.ArticleDTO">
		SELECT article_id AS articleId, 
			   <!-- 현재 필요없어 보이는 두 개의 컬럼을 데이터베이스에서 제외시켰다. -->
			   <!-- group_id AS groupId,
			   sequence_no AS sequenceNo, --> 
			   DATE_FORMAT(posting_date,'%Y-%m-%d') AS postingDate, <!-- 데이터베이스에 date타입으로 저장된 posting_date 컬럼의 값을 ArticleDTO에 postingDate(String 타입)에 저장하기 위한 작업 -->
			   read_count AS readCount,
			   writer_name AS writerName,
			   password,
			   title,
			   content
		FROM Article
		<!-- ${keyField}는 데이터베이스에 컬럼명을 의미(우리는 title 또는 name 둘 중 하나만 컨트롤러에서 보냈다) -->
		<!-- 해당 컬럼에서 keyword(검색할 내용)와 같은 내용이 한개라도 있으면 모두 검사해준다. -->
		WHERE ${keyField} LIKE CONCAT('%',#{keyword},'%') 
		ORDER BY posting_date DESC
		LIMIT #{startRow}, #{articleSize}
	</select>
	
	<select id="selectById" parameterType="int" resultType="com.hanbit.web.board.ArticleDTO">
		SELECT article_id AS articleId, 
		posting_date AS postingDate,
		read_count AS readCount,
		writer_name AS writerName,
		password,
		title, 
		content
		FROM Article WHERE article_id = #{articleId}
	</select>
	
	<select id="countAll" resultType="int"> <!-- 총 게시글이 몇개인지 반환 -->
		SELECT COUNT(*)
		FROM Article
	</select>
	
	<!-- 검색 keyword의 내용을 포함하는 게시글이 몇개인지 반환, 그래서 파라미터 값으로 keyField와 keyword가 필요하다 -->
	<!-- 그러나 String 값 두개를 보내려면 map혹은 객체(DTO)에 저장한 후 이것을 파라미터로 이 mybatis에 보내야 한다. 그래서 command객체에 담아서 보냈다! -->
	<select id="countBySearch" parameterType="com.hanbit.web.global.Command" resultType="int"> 
		SELECT COUNT(*)
		FROM Article
		WHERE ${keyField} LIKE CONCAT('%',#{keyword},'%')
	</select>
	
	<!-- SYSDATE() 대신 NOW()를 해도된다. -->
	<update id="update" parameterType="com.hanbit.web.board.ArticleDTO">
		UPDATE Article 
		SET posting_date = SYSDATE(),
			title = #{title}, 
			password = #{password}, 
			writer_name = #{writerName}, 
			content = #{content}
		WHERE article_id = #{articleId}
	</update>
	
	<delete id="delete" parameterType="int">
		DELETE FROM Article 
		WHERE article_id = #{articleId}
	</delete>
	
	<!-- 댓글 등록, 모든 댓글 select -->
	<insert id="replyInsert" useGeneratedKeys="true" keyProperty="reply_seq" parameterType="com.hanbit.web.board.ReplyDTO"> 
		INSERT INTO Reply(article_id, reply_content) 
		VALUES(#{articleId}, #{reply_content})
	</insert>
	
	<select id="getReply" parameterType="com.hanbit.web.board.ReplyDTO" resultType="com.hanbit.web.board.ReplyDTO"> 
		SELECT * FROM Reply 
		WHERE article_id = #{articleId}
	</select>
	
</mapper>